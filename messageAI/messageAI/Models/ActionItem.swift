//
//  ActionItem.swift
//  messageAI
//
//  AI-extracted action item model
//

import Foundation
import FirebaseFirestore

/// Action item extracted from conversation
/// Generated by AI to track tasks and TODOs
struct ActionItem: Codable, Identifiable {
    let id: String
    let description: String           // What needs to be done
    let assignee: String              // Person assigned or "unassigned"
    let deadline: String              // Deadline date or "none"
    let priority: Priority            // high, medium, low
    let conversationId: String        // Source conversation
    let conversationName: String      // Display name of conversation
    let extractedAt: Date             // When extracted
    let extractedBy: String           // "ai" or "user"
    var status: Status                // pending, completed, dismissed
    var completedAt: Date?            // When marked complete

    /// Priority levels
    enum Priority: String, Codable {
        case high
        case medium
        case low

        var emoji: String {
            switch self {
            case .high: return "ðŸ”´"
            case .medium: return "ðŸŸ¡"
            case .low: return "ðŸŸ¢"
            }
        }
    }

    /// Action item status
    enum Status: String, Codable {
        case pending
        case completed
        case dismissed
    }

    /// Initialize from Cloud Function response
    init(
        id: String = UUID().uuidString,
        description: String,
        assignee: String,
        deadline: String,
        priority: Priority,
        conversationId: String,
        conversationName: String,
        extractedAt: Date = Date(),
        extractedBy: String = "ai",
        status: Status = .pending,
        completedAt: Date? = nil
    ) {
        self.id = id
        self.description = description
        self.assignee = assignee
        self.deadline = deadline
        self.priority = priority
        self.conversationId = conversationId
        self.conversationName = conversationName
        self.extractedAt = extractedAt
        self.extractedBy = extractedBy
        self.status = status
        self.completedAt = completedAt
    }

    /// Parse from Firestore document
    init?(document: [String: Any]) {
        guard let id = document["id"] as? String,
              let description = document["description"] as? String,
              let assignee = document["assignee"] as? String,
              let deadline = document["deadline"] as? String,
              let priorityStr = document["priority"] as? String,
              let priority = Priority(rawValue: priorityStr),
              let conversationId = document["conversationId"] as? String,
              let conversationName = document["conversationName"] as? String,
              let extractedBy = document["extractedBy"] as? String,
              let statusStr = document["status"] as? String,
              let status = Status(rawValue: statusStr) else {
            return nil
        }

        self.id = id
        self.description = description
        self.assignee = assignee
        self.deadline = deadline
        self.priority = priority
        self.conversationId = conversationId
        self.conversationName = conversationName
        self.extractedBy = extractedBy
        self.status = status

        // Parse timestamps
        if let timestamp = document["extractedAt"] as? Timestamp {
            self.extractedAt = timestamp.dateValue()
        } else {
            self.extractedAt = Date()
        }

        if let timestamp = document["completedAt"] as? Timestamp {
            self.completedAt = timestamp.dateValue()
        } else {
            self.completedAt = nil
        }
    }
}
